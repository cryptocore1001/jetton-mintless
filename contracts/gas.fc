const int CONFIG::STORAGE_PRICES = 18;
const int CONFIG::BASECHAIN_GAS_PRICES = 21;
const int CONFIG::BASECHAIN_FWD_PRICES = 25;

const JETTON_WALLET_BITS  = 1115;
const JETTON_WALLET_CELLS = 3;

;; difference in JETTON_WALLET_BITS/JETTON_WALLET_INITSTATE_BITS is difference in
;; StateInit and AccountStorage (https://github.com/ton-blockchain/ton/blob/master/crypto/block/block.tlb)
;; we count bits as if balances are max possible
const JETTON_WALLET_INITSTATE_BITS  = 931;
const JETTON_WALLET_INITSTATE_CELLS = 3;

const SEND_TRANSFER_GAS_CONSUMPTION    = 15364;
const RECEIVE_TRANSFER_GAS_CONSUMPTION = 13064;

const SEND_BURN_GAS_CONSUMPTION    = 9728;
const RECEIVE_BURN_GAS_CONSUMPTION = 6542;

;;const MINT_GAS_CONSUMPTION = 8290;
const PROVIDE_ADDRESS_GAS_CONSUMPTION = 309;

const MIN_STORAGE_DURATION = 5 * 365 * 24 * 3600; ;; 5 years

int calculate_storage_fee(int duration) inline {
    return get_storage_price(MY_WORKCHAIN, duration, JETTON_WALLET_BITS, JETTON_WALLET_CELLS);
}

int init_state_overhead() inline {
    return get_forward_price(MY_WORKCHAIN, JETTON_WALLET_INITSTATE_BITS, JETTON_WALLET_INITSTATE_CELLS);
}

;;; Returns the third element of a triple tuple.
forall A, B, C, D, E, F, G -> F tuple7_at_5([A, B, C, D, E, F, G] p) asm "5 INDEX";
int restore_total_forward_fee(int in_message_forward_fee) inline {
    var configs = get_fee_cofigs();
    ;; 5th element - ConfigParam 25
    ;; msg_forward_prices#ea lump_price:uint64 bit_price:uint64 cell_price:uint64 ihr_price_factor:uint32 first_frac:uint16 next_frac:uint16 = MsgForwardPrices;
    slice msg_forward_prices = configs.tuple7_at_5();
    msg_forward_prices~skip_bits(8 + 64 + 64 + 64 + 32);
    int first_frac = msg_forward_prices.preload_uint(16);
    return muldiv(in_message_forward_fee, 65536, 65536 - first_frac);
}